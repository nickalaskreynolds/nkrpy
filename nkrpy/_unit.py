"""Hold units for Unit class."""
from .constants import ev, pi

units = {
    'j': {'vals': ('j', 'joules', 'joule'),
          'type': 'energy',
          'fac': 1.},
    'ev': {'vals': ('ev', 'electronvolt', 'evs', 'electronvolts'),
           'type': 'energy',
           'fac': ev},
    'kev': {'vals': ('kev', 'kiloelectronvolt', 'kevs',
                     'kiloelectronvolts', 'kiloev'),
            'type': 'energy',
            'fac': 1.E3 * ev},
    'mev': {'vals': ('mev', 'megaelectronvolt', 'mevs',
                     'megaelectronvolts'),
            'type': 'energy',
            'fac': 1.E6 * ev},
    'gev': {'vals': ('gev', 'gigaaelectronvolt', 'gevs', 'gigaelectronvolts'),
            'type': 'energy',
            'fac': 1.E9 * ev},
    'bananas': {'vals': ('b', 'banana'),
                'type': 'wave',
                'fac': 2.032 * 10 ** 9},
    'degrees': {'vals': ('deg', 'd', 'degree'),
                'type': 'angle',
                'fac': 3600.},
    'hourangle': {'vals': ('ha', 'hourangles'),
                  'type': 'angle',
                  'fac': 3600. * 15.},
    'arcmin': {'vals': ('am', 'arcmins'),
               'type': 'angle',
               'fac': 60.},
    'arcsec': {'vals': ('as', 'arcsecs'),
               'type': 'angle',
               'fac': 1.},
    'radians': {'vals': ('rad', 'radian', 'rads'),
                'type': 'angle',
                'fac': 3600. * 180. / pi},
    'angstroms': {'vals': ('ang', 'a', 'angs', 'angstrom'),
                  'type': 'wave',
                  'fac': 1.},
    'micrometers': {'vals': ('microns', 'micron', 'mu', 'micrometres',
                             'micrometre', 'micrometer'),
                    'type': 'wave',
                    'fac': 10 ** 4},
    'millimeters': {'vals': ('mm', 'milli', 'millimetres',
                             'millimetre', 'millimeter'),
                    'type': 'wave',
                    'fac': 10 ** 7},
    'centimeters': {'vals': ('cm', 'centi', 'centimetres',
                             'centimetre', 'centimeter'),
                    'type': 'wave',
                    'fac': 10 ** 8},
    'meters': {'vals': ('m', 'metres', 'meter', 'metre'),
               'type': 'wave',
               'fac': 10 ** 10},
    'kilometers': {'vals': ('km', 'kilo', 'kilometres', 'kilometre',
                            'kilometer'),
                   'type': 'wave',
                   'fac': 10 ** 13},
    'lightyear': {'vals': ('lyr', 'lightyears'),
                  'type': 'wave',
                  'fac': 9.461E25},
    'parcsec': {'vals': ('pc', 'parsecs'),
                'type': 'wave',
                'fac': 3.086E26},
    'hz': {'vals': ('hertz', 'h'),
           'type': 'freq',
           'fac': 1.},
    'khz': {'vals': ('kilohertz', 'kilo-hertz', 'kh'),
            'type': 'freq',
            'fac': 10 ** 3},
    'mhz': {'vals': ('megahertz', 'mega-hertz', 'mh'),
            'type': 'freq',
            'fac': 10 ** 6},
    'ghz': {'vals': ('gigahertz', 'giga-hertz', 'gh'),
            'type': 'freq',
            'fac': 10 ** 9},
    'thz': {'vals': ('terahertz', 'tera-hertz', 'th'),
            'type': 'freq',
            'fac': 10 ** 12}}
