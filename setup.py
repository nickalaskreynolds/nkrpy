"""."""
from setuptools import setup, find_packages
import os


def populate_info(kwargs):
    """."""
    with open('nkrpy/__info__.py', 'w') as f:
        f.write('# flake8: noqa\n')
        f.write('# This file is auto-generated from the setup.py file.\n')
        for key, val in kwargs.items():
            if isinstance(val, str):
                f.write(f'{key} = """{val}"""\n')
            if isinstance(val, bool) or\
               isinstance(val, int) or\
               isinstance(val, float):
                f.write(f'{key} = {val}\n')
            if isinstance(val, list):
                f.write(f'{key} = {val}\n')
    alllines = ''
    with open('nkrpy/__init_generator__.py', 'r') as f:
        alllines = f.readlines()
    string = [kwargs['description']]
    app = 'This file is autogenerated by setup.py'
    string.append(f'\n{"=" * len(app)}\n{app}\n{"=" * len(app)}\n')
    string = '\n'.join(string)
    alllines[0] = alllines[0].replace('DESC', 'nkrpy.\n' + string)
    with open('nkrpy/__init__.py', 'w') as f:
        for line in alllines:
            f.write(line)


with open(os.path.join(os.path.dirname(__file__), '.version')) as v:
    version = v.read()

with open(os.path.join(os.path.dirname(__file__), 'README.md')) as r:
    skiprows = 2
    readme = r.readlines()
    readme = '\n'.join(readme[skiprows:])

with open(os.path.join(os.path.dirname(__file__), 'requirements.txt')) as req:
    requirements = req.read().splitlines()

package_data = {
    '': ['LICENSE', 'README.md', 'requirements.txt', '.version']
}

settings = {
    'name': 'nkrpy',
    'description': readme,
    'long_description': readme,
    'long_description_content_type': "text/md",
    'version': version,
    'url': 'http://github.com/nickalaskreynolds/nkrpy',
    'author': 'Nickalas Reynolds',
    'author_email': 'email@nickreynolds.xyz',
    'license': 'MPL2.0',
    'packages': find_packages(exclude=['tests', 'docs', 'examples']),
    'scripts': [],
    'zip_safe': True,
    'include_package_data': True,
    'package_data': package_data,
    'install_requires': requirements,
    'classifiers': [
        'Development Status :: 4 - Beta',
        'License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)',
        'Programming Language :: Python :: 3.6',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3 :: Only',
        'Intended Audience :: Developers',
        'Natural Language :: English'
    ]
}

if __name__ == '__main__':
    populate_info(settings)
    setup(**settings)

# end of file
